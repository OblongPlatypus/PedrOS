os.loadAPI("draw") --Screen 15, 10
--os.loadAPI("net")

m = peripheral.wrap("monitor_4")
m.setTextScale(0.5)
x, y = m.getSize()
m.setBackgroundColor(draw.yellow)
m.clear()
m.setCursorPos(1, 1)
term.redirect(m)
startX = 3
rednet.open("bottom")
channel = 34
rsCols = colors.combine(draw.green, draw.magenta, draw.lightGrey)

function lights()
    if rs.getBundledOutput("left", draw.green) then
--        rs.setBundledOutput(rs. - draw.green
    end
end

function redstone()
    rs.setBundledOutput("left", rsCols)
end

function doors()
    rsCols = rsCols + draw.black
    redstone()
	sleep(0.5)
	rsCols = rsCols - draw.black
    redstone()
end

function buttons()
	bTab = {}
	xPos = startX
	yPos = 3
	for i = 1, 12 do
	    bTab[i] = {}
		if xPos < 14 then
		    bTab[i][1] = tonumber(xPos)
			bTab[i][2] = tonumber(yPos)
		else
		    xPos = startX
			yPos = yPos + 2
			bTab[i][1] = tonumber(xPos)
			bTab[i][2] = tonumber(yPos)
		end
		xPos = xPos + 4
		bTab[i][3] = tonumber(3)
		bTab[i][4] = tonumber(1)
		bTab[i][5] = draw.black
		bTab[i][6] = draw.yellow
		if i == 10 then
		    bTab[i][7] = "*"
		elseif i == 11 then
		    bTab[i][7] = "0"
		elseif i == 12 then 
		    bTab[i][7] = "D"
		else
		    bTab[i][7] = tonumber(i)
		end
	end
end

function drawButtons(bool)
    click = 0
    for i = 1, 12 do
	    draw.button(bTab[i][1], bTab[i][2], bTab[i][3], bTab[i][4], bTab[i][5], bTab[i][6], bTab[i][7])
    end
	if bool then
	    i = 10
	    draw.button(bTab[i][1], bTab[i][2], bTab[i][3], bTab[i][4], bTab[i][6], bTab[i][5], bTab[i][7])
	end
	clickTrue = false
    repeat
        event, button, cX, cY = os.pullEvent()
        if event == "monitor_touch" then
			if cY <= 6 then
				cY = cY - 1
			end
		    for i = 1, 12 do
                if cX >= bTab[i][1] and cX <= bTab[i][1] + bTab[i][3] then
                    if cY == bTab[i][2] then
                        click = bTab[i][7]
                        clickTrue = true
                    end
                end
			end	
        else
        end
    until clickTrue == true
end	

redstone()
buttons()
while true do
--m.write(x.." : "..y)
    drawButtons()
    if click == "D" then
        doors()
    elseif click == "*" then
        drawButtons(true)
		if click == "D" then
            doors()
		elseif click == 1 then
		    os.reboot()
		elseif click == 2 then
		    break
		elseif click == 3 then
		    rsCols = rsCols - draw.lightGrey
			redstone()
			os.pullEvent("monitor_touch")
		    rsCols = rsCols + draw.lightGrey
			redstone()
		elseif click == "0" then
			rednet.open("bottom")
            rednet.send(channel, "27")
        end			
    else
	    rednet.open("bottom")
        rednet.send(channel, tostring(click))
    end
	term.restore()
	print(click.." "..cX.." "..cY)
	term.redirect(m)
end
term.restore()
for i = 1, 12 do
    print(bTab[i][1].." "..bTab[i][2].." "..bTab[i][3].." "..bTab[i][4].." "..bTab[i][5].." "..bTab[i][6].." "..bTab[i][7])
end
	